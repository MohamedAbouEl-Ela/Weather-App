{"version":3,"sources":["Components/Weather.js","Components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Weather","props","className","city","country","temperature","humidity","description","error","Form","onSubmit","getWeather","type","name","placeholder","required","API_KEY","App","state","e","a","preventDefault","target","value","fetch","api","json","data","setState","main","temp","sys","weather","this","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TA6BeA,EA3BA,SAACC,GACR,OACI,sBAAKC,UAAU,OAAf,UAGID,EAAME,MAAQ,oBAAGD,UAAU,OAAb,oBAA2B,sBAAMA,UAAU,aAAhB,SAA8BD,EAAME,OAA/D,OAGdF,EAAMG,SAAW,oBAAGF,UAAU,OAAb,sBAA6B,sBAAMA,UAAU,aAAhB,SAA8BD,EAAMG,aAGlFH,EAAMI,aAAe,oBAAGH,UAAU,OAAb,0BAAiC,sBAAMA,UAAU,aAAhB,SAA8BD,EAAMI,iBAG1FJ,EAAMK,UAAY,oBAAIJ,UAAU,OAAd,uBAA+B,sBAAMA,UAAU,aAAhB,SAA8BD,EAAMK,cAGrFL,EAAMM,aAAe,oBAAGL,UAAU,OAAb,yBAAgC,sBAAMA,UAAU,aAAhB,SAA8BD,EAAMM,cAApE,OAGrBN,EAAMO,OAAS,oBAAGN,UAAU,OAAb,oBAA2B,sBAAMA,UAAU,aAAhB,SAA8BD,EAAMO,eCT/EC,G,MAXF,SAACR,GAEV,OACI,uBAAMS,SAAUT,EAAMU,WAAtB,UACI,uBAAOC,KAAK,OAAOC,KAAK,OAAOC,YAAY,8BAAyBC,UAAQ,IAC5E,uBAAOH,KAAK,OAAOC,KAAK,UAAUC,YAAY,2BAA2BC,UAAQ,IACjF,uDCHNC,G,MAAQ,oCA6DCC,E,4MA1DbC,MAAQ,CACNb,YAAY,GACZF,KAAK,GACLC,QAAQ,GACRE,SAAS,GACTC,YAAY,GACZC,MAAM,I,EAGRG,W,uCAAa,WAAOQ,GAAP,qBAAAC,EAAA,6DACXD,EAAEE,iBACIlB,EAAOgB,EAAEG,OAAOnB,KAAKoB,MACrBnB,EAAUe,EAAEG,OAAOlB,QAAQmB,MAHtB,SAIOC,MAAM,oDAAD,OAAqDrB,EAArD,cAA+DC,EAA/D,kBAAgFY,IAJ5F,cAILS,EAJK,gBAKQA,EAAIC,OALZ,OAKLC,EALK,OAOPxB,GAAMC,EACR,EAAKwB,SAAS,CACdvB,YAAYsB,EAAKE,KAAKC,KACtB3B,KAAKwB,EAAKd,KACVT,QAAQuB,EAAKI,IAAI3B,QACjBE,SAASqB,EAAKE,KAAKvB,SACnBC,YAAYoB,EAAKK,QAAQ,GAAGzB,YAC5BC,MAAM,KAGN,EAAKoB,SAAS,CACZvB,YAAY,GACZF,KAAK,GACLC,QAAQ,GACRE,SAAS,GACTC,YAAY,GACZC,MAAM,sBAvBC,4C,kGA6Bb,WACE,OACE,qBAAKN,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACA,8CACA,cAAC,EAAD,CAAMS,WAAYsB,KAAKtB,aACvB,cAAC,EAAD,CACEN,YAAa4B,KAAKf,MAAMb,YACxBF,KAAM8B,KAAKf,MAAMf,KACjBC,QAAS6B,KAAKf,MAAMd,QACpBE,SAAU2B,KAAKf,MAAMZ,SACrBC,YAAa0B,KAAKf,MAAMX,YACxBC,MAAOyB,KAAKf,MAAMV,iB,GAnDV0B,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8baef5d9.chunk.js","sourcesContent":["import React  from 'react';\r\nimport \"./Weather.css\"\r\nconst Weather =(props) => {\r\n        return(\r\n            <div className=\"test\">\r\n            \r\n            {\r\n                props.city && <p className=\"info\">City:  <span className=\"info-value\">{props.city}</span> </p>\r\n            }\r\n            {\r\n                props.country && <p className=\"info\">Country: <span className=\"info-value\">{props.country}</span></p>\r\n            }\r\n            {\r\n                props.temperature && <p className=\"info\">temperature: <span className=\"info-value\">{props.temperature}</span></p>\r\n            }\r\n            {\r\n                props.humidity && <p  className=\"info\">humidity: <span className=\"info-value\">{props.humidity}</span></p>\r\n            }\r\n            {\r\n                props.description && <p className=\"info\">description:<span className=\"info-value\">{props.description}</span> </p>\r\n            }\r\n            {\r\n                props.error && <p className=\"info\">error: <span className=\"info-value\">{props.error}</span></p>\r\n            }\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default Weather ;","import React from 'react';\r\nimport \"./Form.css\"\r\nconst Form = (props) => {\r\n\r\n    return(\r\n        <form onSubmit={props.getWeather}>\r\n            <input type=\"text\" name=\"city\" placeholder=\"ُEnter Your City . . .\" required/>\r\n            <input type=\"text\" name=\"country\" placeholder=\"Enter Your Country . . .\" required/>\r\n            <button>Get Forecast</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form ;","import React , {Component} from 'react';\nimport Weather from './Components/Weather';\nimport Form from './Components/Form';\nimport \"./App.css\";\n\nconst API_KEY=\"88860d9e37497a884896ff76e3f8b481\";\n\nclass App extends Component  {\n  state = {\n    temperature:'',\n    city:'',\n    country:'',\n    humidity:'',\n    description:'',\n    error:''\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault()\n    const city = e.target.city.value;\n    const country = e.target.country.value;\n    const api = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city}%2C${country}&appid=${API_KEY}`);\n    const data = await api.json();\n\n    if (city&&country){\n      this.setState({\n      temperature:data.main.temp,\n      city:data.name,\n      country:data.sys.country,\n      humidity:data.main.humidity,\n      description:data.weather[0].description,\n      error:''\n    })\n    } else{\n      this.setState({\n        temperature:'',\n        city:'',\n        country:'',\n        humidity:'',\n        description:'',\n        error:'Please Enter Data'\n      })\n    }\n  }\n\n\n  render() {\n    return(\n      <div className=\"App\">\n        <div className=\"weather-content\">\n        <h1> Weather App</h1>\n        <Form getWeather={this.getWeather} />\n        <Weather\n          temperature={this.state.temperature}\n          city={this.state.city}\n          country={this.state.country}\n          humidity={this.state.humidity}\n          description={this.state.description}\n          error={this.state.error}\n        /> \n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}